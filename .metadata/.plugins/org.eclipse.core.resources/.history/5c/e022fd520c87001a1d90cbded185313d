package com.claudioworks.osworks.api.controller;

import java.util.List;
import java.util.Optional;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.claudioworks.osworks.domain.model.Cliente;
import com.claudioworks.osworks.domain.repository.ClienteRepository;

@RestController
@RequestMapping("/clientes")
public class ClienteController {

	//com essa anotação a instacia é colocada automaticamente no manager
	@PersistenceContext
	private EntityManager manager;
	
	@Autowired
	private ClienteRepository clienteRepository;
	
	@GetMapping("/")
	public List<Cliente> listar() {
		return clienteRepository.findAll();
					//a forma abaixo seria para acesso direto sem o spring data jpa controlando
					/*		return manager.
					createQuery("from Cliente", Cliente.class). //linguagem jpql trazendo consulta do cliente
					getResultList();							//retorna lista da consulta acima
					*/
	}
	
	@GetMapping("/nome={nome}")
	public List<Cliente> listarPorNome(@PathVariable String nome) {
		return clienteRepository.findByNomeContaining(nome);
	}
	
	@GetMapping("/id={id}")
	public ResponseEntity<Cliente> listarPorId(@PathVariable Long id) {
		Optional<Cliente> cliente = clienteRepository.findById(id);
		if (cliente.isPresent()) {
			return ResponseEntity.ok(cliente.get());
		}
		
		return ResponseEntity.notFound().build();
		
	}
}
